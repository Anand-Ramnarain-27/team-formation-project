-- Create custom ENUM types
CREATE TYPE status_enum AS ENUM ('Pending', 'Approved', 'Rejected');
CREATE TYPE rating_enum AS ENUM ('1', '2', '3', '4', '5');

-- Create users table
CREATE TABLE "users" (
  "user_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "name" varchar NOT NULL,
  "email" varchar UNIQUE,
  "role" varchar NOT NULL,
  "auth_provider" varchar,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp
);

-- Create theme table
CREATE TABLE "theme" (
  "theme_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "title" varchar NOT NULL,
  "description" text,
  "submission_deadline" timestamp NOT NULL,
  "voting_deadline" timestamp NOT NULL, -- Fixed typo
  "review_deadline" json NOT NULL,
  "auto_assign_group" boolean NOT NULL,
  "team_lead_acceptance" boolean,
  "number_of_groups" integer NOT NULL,
  "created_by" integer,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp
);

-- Create ideas table
CREATE TABLE "ideas" (
  "idea_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "theme_id" integer,
  "submitted_by" integer,
  "idea_name" varchar NOT NULL,
  "description" text NOT NULL,
  "status" status_enum NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create votes table
CREATE TABLE "votes" (
  "vote_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "idea_id" integer,
  "voted_by" integer,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create groups table
CREATE TABLE "groups" (
  "group_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "theme_id" integer,
  "group_name" varchar,
  "team_lead" integer,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  "updated_at" timestamp
);

-- Create group_members table
CREATE TABLE "group_members" (
  "group_member_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "group_id" integer,
  "user_id" integer,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create review table
CREATE TABLE "review" (
  "review_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "reviewer_id" integer,
  "reviewee_id" integer,
  "group_id" integer,
  "rating" rating_enum NOT NULL,
  "feedback" text NOT NULL,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create notifications table
CREATE TABLE "notifications" (
  "notification_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "recipient_role" varchar,
  "message" text NOT NULL,
  "created_by" integer,
  "created_at" timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- Create analytics_reports table
CREATE TABLE "analytics_reports" (
  "report_id" INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  "theme_id" integer,
  "total_students" integer,
  "total_reports" integer,
  "average_rating" float,
  "participation_stats" json
);

-- Create unique indexes
CREATE UNIQUE INDEX "votes_idea_id_voted_by_unique" ON "votes" ("idea_id", "voted_by");
CREATE UNIQUE INDEX "group_members_group_id_user_id_unique" ON "group_members" ("group_id", "user_id");

-- Add foreign key constraints
ALTER TABLE "theme" ADD FOREIGN KEY ("created_by") REFERENCES "users" ("user_id");
ALTER TABLE "ideas" ADD FOREIGN KEY ("theme_id") REFERENCES "theme" ("theme_id");
ALTER TABLE "ideas" ADD FOREIGN KEY ("submitted_by") REFERENCES "users" ("user_id");
ALTER TABLE "votes" ADD FOREIGN KEY ("idea_id") REFERENCES "ideas" ("idea_id");
ALTER TABLE "votes" ADD FOREIGN KEY ("voted_by") REFERENCES "users" ("user_id");
ALTER TABLE "groups" ADD FOREIGN KEY ("theme_id") REFERENCES "theme" ("theme_id");
ALTER TABLE "groups" ADD FOREIGN KEY ("team_lead") REFERENCES "users" ("user_id");
ALTER TABLE "group_members" ADD FOREIGN KEY ("group_id") REFERENCES "groups" ("group_id");
ALTER TABLE "group_members" ADD FOREIGN KEY ("user_id") REFERENCES "users" ("user_id");
ALTER TABLE "review" ADD FOREIGN KEY ("reviewer_id") REFERENCES "users" ("user_id");
ALTER TABLE "review" ADD FOREIGN KEY ("reviewee_id") REFERENCES "users" ("user_id");
ALTER TABLE "review" ADD FOREIGN KEY ("group_id") REFERENCES "groups" ("group_id");
ALTER TABLE "notifications" ADD FOREIGN KEY ("created_by") REFERENCES "users" ("user_id");
ALTER TABLE "analytics_reports" ADD FOREIGN KEY ("theme_id") REFERENCES "theme" ("theme_id");